---
title: "Figure 3"
author: "Nick Borcherding"
format: html
editor: visual
date: 'Compiled: `r format(Sys.Date(), "%B %d, %Y")`'
---

## Loading Libraries

```{r}
library(Seurat)
library(scRepertoire)
library(patchwork)
library(ggplot2)
library(viridis)
library(dplyr)
library(RColorBrewer)
library(Nebulosa)
library(mumosa)
library(Ibex)
library(stringr)
library(scplotter)
```

## Converting Single-cell Data

```{r}
ad <- anndata::read_h5ad('./data/Kim2022/WU368_kim_et_al_nature_2022_gex_b_cells.h5ad')

#Forming New Seurat Object
SeuratMerge <- CreateSeuratObject(counts = t(ad$layers[["raw_counts"]]), 
                                  meta.data = ad$obs)

#Adding Dimensional Reduction

PCA <- ad$obsm$X_pca
rownames(PCA) <- rownames(ad$obs)
PCA <- CreateDimReducObject(embeddings = PCA,
                             loadings = PCA,
                             projected = PCA,
                             key = "PC_",
                             assay = "RNA")
SeuratMerge[["pca"]] <- PCA


UMAP <- ad$obsm$X_umap
rownames(UMAP) <- rownames(ad$obs)
UMAP <- CreateDimReducObject(embeddings = UMAP,
                             loadings = UMAP,
                             projected = UMAP,
                             key = "UMAP_",
                             assay = "RNA")

SeuratMerge[["umap"]] <- UMAP

#Adding Epitope Information
Epitope.Data <- read.delim("./data/Kim2022/WU368_kim_et_al_nature_2022_mabs.tsv")
Epitope.Data$cell_id <- stringr::str_split(Epitope.Data$h_sequence_id, "_con", simplify = TRUE)[,1]

meta <- SeuratMerge[[]]
meta$barcodes <- rownames(meta)
meta <- merge(meta, Epitope.Data, by = "cell_id", all = TRUE)
meta <- meta[-which(is.na(meta$barcodes)),]
new.meta.data <- data.frame(Spike.Specific = meta$elisa, 
                            row.names = meta$barcodes)
new.meta.data$Spike.Specific[is.na(new.meta.data$Spike.Specific)] <- "Unknown"
new.meta.data$Spike.Specific[new.meta.data$Spike.Specific == TRUE] <- "Yes"
new.meta.data$Spike.Specific[new.meta.data$Spike.Specific == FALSE] <- "No"
SeuratMerge <- AddMetaData(SeuratMerge, new.meta.data)

####################
#Attaching BCR data 
####################

#Loading the Light Chain
IGL <- read.delim("./data/kim2022/WU368_kim_et_al_nature_2022_bcr_light.tsv.gz")[,c("cell_id", "locus", "v_call", "d_call", "j_call", "isotype", "productive", "junction_aa", "junction", "consensus_count", "duplicate_count")]
IGL <- IGL[!is.na(IGL$cell_id),]
colnames(IGL) <- c("barcode", "chain", "v_gene", "d_gene", "j_gene", "c_gene", "productive", "cdr3", "cdr3_nt", "reads", "umis")

#Loading the Heavy Chain
IGH <- read.delim("./data/kim2022/WU368_kim_et_al_nature_2022_bcr_heavy.tsv.gz")[,c("cell_id", "locus", "v_call", "d_call", "j_call", "isotype", "productive", "junction_aa", "junction", "consensus_count", "duplicate_count")]
IGH <- IGH[!is.na(IGH$cell_id),]
colnames(IGH) <- c("barcode", "chain", "v_gene", "d_gene", "j_gene", "c_gene", "productive", "cdr3", "cdr3_nt", "reads", "umis")

BCR <- rbind(IGH, IGL)
samples.vector <- stringr::str_split(BCR$barcode, "_", simplify = TRUE)[,1]
#Update vector to match larger grouping
samples.vector <- str_replace(samples.vector, "368.07", "368-07")
samples.vector <- str_replace(samples.vector, "368.22", "368-22")
samples.vector <- str_replace(samples.vector, "368.20", "368-20")
samples.vector <- str_split(samples.vector, "[.]", simplify = TRUE)[,1]

BCR.list <- split(BCR, samples.vector)

BCR.combined <- combineBCR(BCR.list, 
                           samples = names(BCR.list), 
                           removeNA = TRUE)
saveRDS(BCR.combined, "./data/processed/Processed_BCR.rds")

meta <- SeuratMerge[[]]
meta$barcodes <- rownames(meta)
BCR.rbind <- do.call(rbind, BCR.combined)
BCR.rbind$barcode <- sub("^\\d+-\\w+_", "", BCR.rbind$barcode)
meta <- merge(meta, BCR.rbind, by.x = "cell_id", by.y = "barcode")
barcodes <- meta$barcodes
meta <- meta[,c(colnames(BCR.rbind)[-c(1:2)],"donor")]
meta$barcode <- barcodes

meta.list <- split(meta, meta$donor)
SeuratMerge <- combineExpression(meta.list, SeuratMerge)

saveRDS(SeuratMerge, "./data/processed/Kim2022_SeuratObject.rds")

############################
#Saving Outputs for Benisse
############################

tmp <- BCR[BCR$chain == "IGH",]
tmp <- tmp %>%
          group_by(barcode) %>%
          slice_max(order_by = reads, n=1) %>%
          as.data.frame()
  
tmp <- tmp %>%
          group_by(barcode) %>%
          slice_max(order_by = umis, n=1) %>%
          as.data.frame()
          
tmp <- data.frame(row.names = tmp$barcode,
                  contigs = paste0(tmp$barcode, "_contig_1"), 
                  cdr3 = tmp$cdr3)
  
rownames(tmp) <- stringr::str_replace_all(rownames(tmp), "-", ".")
  
write.csv(tmp, "./data/Benisse/inputs/Kim2022_contigs.csv")
```

## Figure 3A

Ploting UMAP and clusters

```{r}
SeuratMerge <- readRDS("./data/processed/Kim2022_SeuratObject.rds")

Cluster.Pal <- colorRampPalette(brewer.pal(11, "Paired"))(length(unique(SeuratMerge$leiden_0.18)))

update_geom_defaults("point", list(stroke=0.2))
CellDimPlot(SeuratMerge, 
            group_by = "leiden_0.18", 
            reduction = "umap",
            label = TRUE,
            pt.size = 0.1,
            label_insitu = TRUE,
            theme = "theme_blank", 
            raster = FALSE) + 
  guides(color = "none") + 
  theme_void()

ggsave("./outputs/Figure3/Figure3A.png", height = 4.5, width = 5, dpi = 300)
```

## Figure 3B

```{r}
features <- c("CD19", "CD27", "CD79A", "IGHM", "IGHD", "MKI67", "MS4A1", "PRDM1", "XBP1")
SeuratMerge <- NormalizeData(SeuratMerge)

plot_density(SeuratMerge, 
                features = features) +
  plot_layout(ncol = 3) & 
  theme_void() & 
  theme(legend.position = "none", 
        plot.title = element_blank(), 
        plot.subtitle = element_blank(), 
        strip.text = element_blank(), 
        plot.margin = margin(10, 10, 20, 10)) 

ggsave("./outputs/Figure3/Figure3B.png", height = 13.5, width = 15, dpi = 300)
```

## Figure 3C

Plotting the Spike Specific Sequences

```{r}
#Overlaid on UMAP
CellDimPlot(SeuratMerge,
  group_by = "leiden_0.18", 
  reduction = "umap",
  highlight = 'Spike.Specific == "Yes"',
  raster = FALSE,
  theme = "theme_blank"
) + 
  guides(color = "none") + 
  theme_void()
ggsave("./outputs/Figure3/Figure3C.1.png", height = 4.5, width = 5, dpi = 300)

#Breakdown by Category
SeuratMerge$Spike.Specific <- factor(SeuratMerge$Spike.Specific, levels = c("Unknown", "No", "Yes"))
CellStatPlot(SeuratMerge, 
             ident = "leiden_0.18",
             group_by = "Spike.Specific", 
             frac = "group",
             swap = TRUE, 
             position = "stack") +
  scale_x_discrete(limits = rev) + 
  guides(fill = "none") + 
  coord_flip() + 
  theme(axis.title.y = element_blank())
ggsave("./outputs/Figure3/Figure3C.2.pdf", height = 3, width = 4.5)
```


## Figure 3D

```{r}
#Isolating V and C Gene Usage from BCR Sequences
SeuratMerge$Heavy.V <- str_split(SeuratMerge$CTgene, "[.]", simplify = TRUE)[,1]
SeuratMerge$Light.V <- str_split(str_split(SeuratMerge$CTgene, "[_]", simplify = TRUE)[,2], "[.]", simplify = TRUE)[,1]
SeuratMerge$Heavy.C <- str_split(str_split(SeuratMerge$CTgene, "[.]", simplify = TRUE)[,4], "[_]", simplify = TRUE)[,1]
SeuratMerge$Light.C <- str_split(str_split(SeuratMerge$CTgene, "[_]", simplify = TRUE)[,2], "[.]", simplify = TRUE)[,3]

SeuratMerge  <- runIbex(SeuratMerge, 
                        chains = "Heavy",
                        method = "encoder",
                        encoder.model = "VAE", 
                        encoder.input = "AF", 
                        reduction.name = "Ibex.H.VAE.AF")

#Light Chain
SeuratMerge  <- runIbex(SeuratMerge, 
                        chains = "Light",
                        method = "encoder",
                        encoder.model = "VAE", 
                        encoder.input = "AF", 
                        reduction.name = "Ibex.L.VAE.AF")


reductions <- c("Ibex.H.VAE.AF", "Ibex.L.VAE.AF")
for (j in seq_along(reductions)) {
        if (j ==1) {
          vgene <- "Heavy.V"
        } else {
          vgene <- "Light.V"
        }
  
  non.duplicated <- unique(SeuratMerge@reductions[[reductions[j]]]@cell.embeddings)
  x <- phateR::phate(non.duplicated, knn = 10)
  
        
  #plot.df <- data.frame(barcode = rownames(non.duplicated), x$embedding)
  plot.df <- data.frame(barcode = rownames(non.duplicated), x)
  plot.df$patient <- stringr::str_split(plot.df$barcode, "_", simplify = TRUE)[,1]
  plot.df <- merge(plot.df, SeuratMerge[[]], by.x = 1, by.y = 0)
  plot.df$Epitope <- as.character(plot.df$Epitope)
  plot.df$Epitope[which(is.na(plot.df$Epitope))] <- "No"
  plot.df$Epitope <- factor(plot.df$Epitope, levels = c("NP", "ORF8", "RBD", "Spike", "No"))
  plot.df$Epitope[which(is.na(plot.df$Epitope))] <- "No"
        
  plot1 <- ggplot(plot.df, aes(x = PHATE1, y = PHATE2)) + 
                    geom_point(aes(color = plot.df[,vgene])) + 
                    scale_color_viridis(discrete = TRUE) + 
                    xlim(min(plot.df$PHATE1)*1.25, max(plot.df$PHATE1*1.25)) + 
                    ylim(min(plot.df$PHATE2)*1.25, max(plot.df$PHATE2)*1.25) + 
                    guides(color = "none") + 
                    theme_void()
  
  plot2 <- ggplot(plot.df %>% arrange(desc(Epitope), .by_group = TRUE), aes(x = PHATE1, y = PHATE2)) + 
                    geom_point(aes(color = Epitope)) + 
                    scale_color_manual(values = c(viridis_pal()(4), "grey")) + 
                    xlim(min(plot.df$PHATE1)*1.25, max(plot.df$PHATE1*1.25)) + 
                    ylim(min(plot.df$PHATE2)*1.25, max(plot.df$PHATE2)*1.25) + 
                    theme_void()

  plot1 + plot2 + plot_layout(guides = "collect")
  ggsave(paste0("./outputs/Figure3/Figure3D_", reductions[j], ".png"), height = 5, width = 10.25, dpi = 600)
}
```

## Figure 3E

```{r}
output <- rescaleByNeighbors(
                  list(SeuratMerge[["Ibex.H.VAE.AF"]]@cell.embeddings,
                       SeuratMerge[["Ibex.L.VAE.AF"]]@cell.embeddings, 
                       SeuratMerge[["pca"]]@cell.embeddings))

phate_output <- phateR::phate(output)

colnames(output) <- paste0("c_Ibex", seq_len(ncol(output)))

SeuratMerge[["Trimodal.Embed"]] <- CreateDimReducObject(embeddings = as.matrix(output),
                                                        stdev = rep(0, ncol(output)),
                                                        assay = "RNA",
                                                        key = "Combined",
                                                        jackstraw = NULL,
                                                        misc = list())

SeuratMerge[["Trimodal.Phate"]] <- CreateDimReducObject(embeddings = phate_output$embedding,
                                                        stdev = rep(0, ncol(phate_output$embedding)),
                                                        assay = "RNA",
                                                        key = "TPhate",
                                                        jackstraw = NULL,
                                                        misc = list())

SeuratMerge <- FindNeighbors(SeuratMerge, 
                             reduction = "Trimodal.Embed", 
                             dims = 1:100, 
                             graph.name = c("Ibex_nn", "Ibex_snn"))
SeuratMerge <- FindClusters(SeuratMerge,
                            resolution = 0.3,
                            graph.name = "Ibex_snn",
                            algorithm = 4)

#######################################
#UMAP Comparisons between each approach
#######################################

plot.df <- data.frame(SeuratMerge[["Trimodal.Phate"]]@cell.embeddings, SeuratMerge[[]])
plot.df$Epitope[which(is.na(plot.df$Epitope))] <- "No"
plot.df$Epitope <- factor(plot.df$Epitope, levels = c("NP", "ORF8", "RBD", "Spike", "No"))
plot.df$Epitope[which(is.na(plot.df$Epitope))] <- "No"

centers = plot.df %>% 
          group_by(Ibex_snn_res.0.3) %>%
  summarize(across(c("TPhate_1", "TPhate_2"),~ mean(.x, na.rm = TRUE))) %>%
          as.data.frame()
    

Cluster.Pal <- colorRampPalette(brewer.pal(11, "Paired"))(length(unique(SeuratMerge$Ibex_snn_res.0.3)))

        
plot1 <- ggplot(plot.df, aes(x = TPhate_1, y = TPhate_2)) + 
                    geom_point(aes(color = Ibex_snn_res.0.3)) + 
                    geom_text(data = centers, mapping =  aes(x=centers[,2], y = centers[,3], label = Ibex_snn_res.0.3), 
              color = "black", size = 5) + 
                    scale_color_manual(values = Cluster.Pal) + 
                    guides(color = "none") + 
                    theme_void()

plot2 <- ggplot(plot.df %>% arrange(desc(Epitope)), aes(x = TPhate_1, y = TPhate_2)) + 
                    geom_point(aes(color = Epitope)) + 
                    scale_color_manual(values = c(viridis_pal()(4), "grey")) +
                    guides(color = "none") + 
                    theme_void()

plot1 + plot2
ggsave(paste0("./outputs/Figure3/Figure3E.png"), height = 5, width = 10, dpi = 600)
```

Figure 3F

```{r}
plot1 <- ggplot(subset(plot.df, Epitope != "No"), aes(x = Ibex_snn_res.0.3)) + 
  geom_bar(aes(fill = Epitope)) + 
  scale_fill_viridis(discrete = TRUE) + 
  theme_clean()

plot2 <- ggplot(subset(plot.df, Epitope != "No"), aes(x = Ibex_snn_res.0.3)) + 
  geom_bar(aes(fill = Epitope), position = "fill") + 
  scale_fill_viridis(discrete = TRUE) + 
  theme_clean()

plot1 + plot2 +plot_layout(ncol = 1, guides = "collect")
ggsave(paste0("./outputs/Figure3/Figure3F.png"), height = 5, width = 10, dpi = 600)


plot1 <- ggplot(subset(plot.df, RNA_snn_res.0.8 %in% c(4,6,7,8,12)), aes(x = TPhate_1, y = TPhate_2)) + 
                    geom_point(aes(color = Ibex_snn_res.0.3)) + 
                    geom_text(data = centers, mapping =  aes(x=centers[,2], y = centers[,3], label = Ibex_snn_res.0.3), 
              color = "black", size = 5) + 
                    scale_color_manual(values = Cluster.Pal) + 
                    guides(color = "none") + 
                    theme_void()

plot2 <- ggplot(subset(plot.df, RNA_snn_res.0.8 %in% c(4,6,7,8,12)) %>% arrange(desc(Epitope)), aes(x = TPhate_1, y = TPhate_2)) + 
                    geom_point(aes(color = Epitope)) + 
                    scale_color_manual(values = c(viridis_pal()(4), "grey")) +
                    guides(color = "none") + 
                    theme_void()

plot1 + plot2
ggsave(paste0("./outputs/Supplemental/FigureB_1.png"), height = 5, width = 10, dpi = 600)


plot1 <- ggplot(subset(plot.df, Epitope != "No" & RNA_snn_res.0.8 %in% c(4,6,7,8,12) ), aes(x = Ibex_snn_res.0.3)) + 
  geom_bar(aes(fill = Epitope)) + 
  scale_fill_viridis(discrete = TRUE) + 
  theme_clean()

plot2 <- ggplot(subset(plot.df, Epitope != "No" & RNA_snn_res.0.8 %in% c(4,6,7,8,12) ), aes(x = Ibex_snn_res.0.3)) + 
  geom_bar(aes(fill = Epitope), position = "fill") + 
  scale_fill_viridis(discrete = TRUE) + 
  theme_clean()

plot1 + plot2 +plot_layout(ncol = 1, guides = "collect")
ggsave(paste0("./outputs/Supplemental/FigureB_2.png"), height = 5, width = 10, dpi = 600)


```

## Saving Final File

```{r}
saveRDS(SeuratMerge, "./data/processed/Dugan2021_BEAM.ab_Recovered_Seurat.rds")
```

## Conclusions

```{r}
sessionInfo()
```
